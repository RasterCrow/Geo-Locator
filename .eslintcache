[{"D:\\Utente\\Desktop\\code\\MyWebsite\\Hair_Soccer\\client\\src\\index.js":"1","D:\\Utente\\Desktop\\code\\MyWebsite\\Hair_Soccer\\client\\src\\App.js":"2","D:\\Utente\\Desktop\\code\\MyWebsite\\Hair_Soccer\\client\\src\\reportWebVitals.js":"3","D:\\Utente\\Desktop\\code\\MyWebsite\\Hair_Soccer\\client\\src\\components\\Canvas\\Canvas.js":"4","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\index.js":"5","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\App.js":"6","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\reportWebVitals.js":"7","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Map\\Map.js":"8","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Map\\MapWrapper.js":"9","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\UI\\Navbar\\Navbar.js":"10","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\pages\\GameLobby.js":"11","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\pages\\Home.js":"12","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\pages\\GamePage.js":"13","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\providers\\Auth.js":"14","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\services\\firebase.js":"15","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Lobby\\CreateLobbyModal.js":"16","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Lobby\\JoinLobbyModal.js":"17","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\providers\\GameProvider.js":"18","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Lobby\\User.js":"19","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Lobby\\CreateUserModal.js":"20","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Map\\MapGuesser.js":"21","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Result\\ResultScreen.js":"22","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Result\\User.js":"23","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Result\\Scoreboard.js":"24"},{"size":500,"mtime":1610028476958,"results":"25","hashOfConfig":"26"},{"size":1971,"mtime":1610033926281,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1610028476958,"results":"28","hashOfConfig":"26"},{"size":720,"mtime":1610031165877,"results":"29","hashOfConfig":"26"},{"size":735,"mtime":1610189474079,"results":"30","hashOfConfig":"31"},{"size":1567,"mtime":1610203118336,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1610028476958,"results":"33","hashOfConfig":"31"},{"size":1531,"mtime":1610203528254,"results":"34","hashOfConfig":"31"},{"size":996,"mtime":1610203442111,"results":"35","hashOfConfig":"31"},{"size":1742,"mtime":1610203237869,"results":"36","hashOfConfig":"31"},{"size":5830,"mtime":1610203139629,"results":"37","hashOfConfig":"31"},{"size":1215,"mtime":1610139626058,"results":"38","hashOfConfig":"31"},{"size":8725,"mtime":1610206116892,"results":"39","hashOfConfig":"31"},{"size":888,"mtime":1610119093069,"results":"40","hashOfConfig":"31"},{"size":907,"mtime":1610203154188,"results":"41","hashOfConfig":"31"},{"size":4127,"mtime":1610206454645,"results":"42","hashOfConfig":"31"},{"size":3549,"mtime":1610203333008,"results":"43","hashOfConfig":"31"},{"size":10639,"mtime":1610203175057,"results":"44","hashOfConfig":"31"},{"size":449,"mtime":1610203257726,"results":"45","hashOfConfig":"31"},{"size":2926,"mtime":1610203345820,"results":"46","hashOfConfig":"31"},{"size":1609,"mtime":1610201669320,"results":"47","hashOfConfig":"31"},{"size":2898,"mtime":1610203300328,"results":"48","hashOfConfig":"31"},{"size":962,"mtime":1610203265322,"results":"49","hashOfConfig":"31"},{"size":232,"mtime":1610203280195,"results":"50","hashOfConfig":"31"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16b220g",{"filePath":"53","messages":"54","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"i37ih3",{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"D:\\Utente\\Desktop\\code\\MyWebsite\\Hair_Soccer\\client\\src\\index.js",[],"D:\\Utente\\Desktop\\code\\MyWebsite\\Hair_Soccer\\client\\src\\App.js",["111","112","113","114","115","116","117","118","119"],"D:\\Utente\\Desktop\\code\\MyWebsite\\Hair_Soccer\\client\\src\\reportWebVitals.js",[],"D:\\Utente\\Desktop\\code\\MyWebsite\\Hair_Soccer\\client\\src\\components\\Canvas\\Canvas.js",[],["120","121"],"D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\index.js",[],["122","123"],"D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\App.js",["124","125"],"import React, { Suspense, lazy } from \"react\";\nimport CustomNavbar from \"./components/UI/Navbar/Navbar\";\nimport { Route, Redirect, Switch, BrowserRouter } from \"react-router-dom\";\nimport { Loader } from \"rsuite\";\n\nconst GameLobby = lazy(() => import(\"./pages/GameLobby\"));\nconst Home = lazy(() => import(\"./pages/Home\"));\nconst GamePage = lazy(() => import(\"./pages/GamePage\"));\n\n//const ENDPOINT = \"http://localhost:4001\";\n\nfunction App() {\n  //const { isLoading, authenticated } = useContext(AuthContext);\n  const isLoading = false;\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        {isLoading ? (\n          <Loader size=\"lg\" content=\"Large\" center content=\"Loading...\" />\n        ) : (\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <CustomNavbar />\n            <div style={{ height: \"95vh\" }}>\n              <Suspense\n                fallback={\n                  <Loader\n                    size=\"lg\"\n                    content=\"Large\"\n                    center\n                    content=\"Loading...\"\n                  />\n                }\n              >\n                <Switch>\n                  <Route exact path=\"/\" component={Home}></Route>\n\n                  <Route path={`/game/:uid`} exact component={GamePage} />\n                  <Route path={`/lobby/:uid`} exact component={GameLobby} />\n                  <Redirect from=\"*\" to=\"/\" />\n                </Switch>\n              </Suspense>\n            </div>\n          </div>\n        )}\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\reportWebVitals.js",[],"D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Map\\Map.js",["126","127"],"import React, { useEffect } from \"react\";\r\n\r\nexport default function Map(props) {\r\n  useEffect(() => {\r\n    let options = {\r\n      zoom: props.zoom,\r\n      location: props.center,\r\n      mapTypeId: window.google.maps.MapTypeId.ROADMAP,\r\n    };\r\n    var streetViewService = new window.google.maps.StreetViewService();\r\n    var STREETVIEW_MAX_DISTANCE = 100;\r\n\r\n    streetViewService.getPanoramaByLocation(\r\n      options.location,\r\n      STREETVIEW_MAX_DISTANCE,\r\n      function (streetViewPanoramaData, status) {\r\n        if (status === window.google.maps.StreetViewStatus.OK) {\r\n          // We have a streetview pano for this location, so let's roll\r\n          var panoramaOptions = {\r\n            position: options.location,\r\n            addressControl: false,\r\n            linksControl: false,\r\n            showRoadLabels: false,\r\n            fullscreenControl: false,\r\n            pov: {\r\n              heading: 270,\r\n              zoom: 1,\r\n              pitch: -10,\r\n            },\r\n            visible: true,\r\n          };\r\n\r\n          var panorama = new window.google.maps.StreetViewPanorama(\r\n            document.getElementById(\"map\"),\r\n            panoramaOptions\r\n          );\r\n        } else {\r\n          // no street view available in this range, or some error occurred\r\n          alert(\r\n            \"Streetview is not available for this location :( Mind telling us that you saw this?\"\r\n          );\r\n        }\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return <div style={{ width: \"100%\", height: \"100%\" }} id=\"map\" />;\r\n}\r\n","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Map\\MapWrapper.js",[],"D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\UI\\Navbar\\Navbar.js",[],"D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\pages\\GameLobby.js",["128","129","130","131"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Panel, Button, Notification, InputNumber } from \"rsuite\";\r\nimport { db } from \"../services/firebase\";\r\nimport User from \"../components/Lobby/User\";\r\nimport { AuthContext } from \"../providers/Auth\";\r\nimport CreateUserModal from \"../components/Lobby/CreateUserModal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createGame } from \"../providers/GameProvider\";\r\n\r\nexport default function GameLobby(props) {\r\n  const [joinedUsers, setJoinedUsers] = useState([]);\r\n  const [isHost, setIsHost] = useState(false);\r\n  const [isAuth, setIsAuth] = useState(false);\r\n  const [rounds, setRounds] = useState(null);\r\n  const [timeLimit, setTimeLimit] = useState(null);\r\n  const lobbyID = props.match.params.uid;\r\n  const { currentUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    //retrieve connected users\r\n    if (currentUser == null) {\r\n      //if null, create a user\r\n\r\n      setIsAuth(false);\r\n    } else {\r\n      //TODO check for password\r\n\r\n      //when connected\r\n      setIsAuth(true);\r\n      //keep track of connected users and different data\r\n      var lobbyRef = db.ref(`lobbies/${lobbyID}`);\r\n      lobbyRef.on(\"value\", (snapshot) => {\r\n        if (snapshot.exists()) {\r\n          const data = snapshot.val();\r\n          //setto host e onDisconnect\r\n          if (data.host == currentUser.uid) {\r\n            setIsHost(true);\r\n            //console.log(\"user is host\");\r\n            //if host disconnects, remove lobby completely\r\n            var presenceRefHost = db.ref(`lobbies/${lobbyID}`);\r\n            presenceRefHost.onDisconnect().set({\r\n              null: null,\r\n            });\r\n          } else {\r\n\r\n            //if user disconnects, disconnect user\r\n            var presenceRef = db.ref(`lobbies/${lobbyID}/players`);\r\n            presenceRef.onDisconnect().update({\r\n              [currentUser.uid]: null,\r\n            });\r\n          }\r\n\r\n          //setto lista utentiJoinati\r\n          let allplayers = [];\r\n          snapshot.child(\"players\").forEach((element) => {\r\n            allplayers.push(element.val());\r\n          });\r\n          if (joinedUsers != allplayers) {\r\n            setJoinedUsers(allplayers);\r\n          }\r\n          //keep track of game start\r\n          if (data.gameStarted) {\r\n            history.push(`/game/${lobbyID}`);\r\n          }\r\n          //setto rounds e timeLimit\r\n          setRounds(data.rounds);\r\n          setTimeLimit(data.timeLimit);\r\n        } else {\r\n          Notification[\"error\"]({\r\n            title: \"Error\",\r\n            description: \"Host closed the match. You'll now be redirected...\",\r\n          });\r\n          setTimeout(() => {\r\n            history.push(`/`);\r\n          }, 1500);\r\n        }\r\n      });\r\n      //checks when it disconnects\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const handleStartGame = () => {\r\n    if (isHost) {\r\n      //create game\r\n      createGame(joinedUsers, currentUser.uid, lobbyID, rounds, timeLimit);\r\n    }\r\n  };\r\n  const handleRoundsChange = (e) => {\r\n    db.ref(`lobbies/${lobbyID}`).update({ rounds: e });\r\n  };\r\n  const handleTimeLimitChange = (e) => {\r\n    db.ref(`lobbies/${lobbyID}`).update({ timeLimit: e * 60 });\r\n  };\r\n\r\n  return !isAuth ? (\r\n    <CreateUserModal lobbyId={lobbyID} />\r\n  ) : (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          height: \"100%\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Panel\r\n          style={{\r\n            minHeight: \"300px\",\r\n            width: \"500px\",\r\n            backgroundColor: \"#2B2E33\",\r\n          }}\r\n          header=\"Lobby Setup\"\r\n          shaded\r\n        >\r\n          <div style={{ marginBottom: \"25px\" }}>\r\n            {joinedUsers.length > 0 ? (\r\n              joinedUsers.map((singleUser) => {\r\n                return <User key={singleUser.uid} user={singleUser} />;\r\n              })\r\n            ) : (\r\n                <p>Loading...</p>\r\n              )}\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              paddingRight: \"20px\",\r\n            }}\r\n          >\r\n            {isHost ? (\r\n              <>\r\n                <div>\r\n                  Rounds :{\" \"}\r\n                  <InputNumber\r\n                    value={rounds}\r\n                    onChange={(e) => handleRoundsChange(e)}\r\n                    min={2}\r\n                    max={20}\r\n                    step={1}\r\n                  />\r\n                Time limit per round:{\" \"}\r\n                  <InputNumber\r\n                    value={timeLimit}\r\n                    onChange={(e) => handleTimeLimitChange(e)}\r\n                    value={timeLimit / 60}\r\n                    min={1}\r\n                    max={10}\r\n                    step={1}\r\n                  />\r\n                minutes\r\n              </div>\r\n                <Button\r\n                  style={{ height: \"50px\", alignSelf: \"center\" }}\r\n                  appearance=\"primary\"\r\n                  onClick={handleStartGame}\r\n                >\r\n                  Start Game\r\n              </Button>\r\n              </>\r\n            ) : (\r\n                <>\r\n                  <div>\r\n                    Rounds : {rounds}\r\n                    <br />\r\n                Time limit per round: {timeLimit / 60} minutes\r\n              </div>\r\n                  <Button\r\n                    style={{ height: \"50px\" }}\r\n                    disabled\r\n                    appearance=\"primary\"\r\n                    onClick={handleStartGame}\r\n                  >\r\n                    Start Game\r\n              </Button>\r\n                </>\r\n              )}\r\n          </div>\r\n        </Panel>\r\n      </div>\r\n    );\r\n}\r\n","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\pages\\Home.js",[],"D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\pages\\GamePage.js",["132","133","134","135","136","137","138","139","140","141","142"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport MapWrapper from \"../components/Map/MapWrapper\";\r\nimport { db } from \"../services/firebase\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../providers/Auth\";\r\nimport { GameContext, addGuessedLoc } from \"../providers/GameProvider\";\r\nimport { Button } from \"rsuite\";\r\nimport ResultScreen from \"../components/Result/ResultScreen\";\r\nfunction getDistanceFromLatLonInKm(lat1, lon1, lat2, lon2) {\r\n  var R = 6371; // Radius of the earth in km\r\n  var dLat = deg2rad(lat2 - lat1); // deg2rad below\r\n  var dLon = deg2rad(lon2 - lon1);\r\n  var a =\r\n    Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n    Math.cos(deg2rad(lat1)) *\r\n    Math.cos(deg2rad(lat2)) *\r\n    Math.sin(dLon / 2) *\r\n    Math.sin(dLon / 2);\r\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n  var d = R * c; // Distance in km\r\n  return Promise.resolve(d);\r\n}\r\n\r\nfunction deg2rad(deg) {\r\n  return deg * (Math.PI / 180);\r\n}\r\n\r\nexport default function GamePage(props) {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const { lonGuessed, latGuessed } = useContext(GameContext);\r\n\r\n  const history = useHistory();\r\n  const lobbyID = props.match.params.uid;\r\n  const [timeLimit, setTimeLimit] = useState(null);\r\n  const [rounds, setRounds] = useState(null);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [currentRound, setCurrentRound] = useState(0);\r\n  const [isPartecipant, setIsPartecipant] = useState(false);\r\n  const [gameData, setGameData] = useState([]);\r\n  const [isGameStarted, setIsGameStarted] = useState(false);\r\n  const [isGameFinished, setIsGameFinished] = useState(false);\r\n\r\n  useEffect(() => {\r\n    //check if game exists\r\n    if (currentUser == null) {\r\n      history.push(\"/\");\r\n    } else {\r\n      db.ref(`games/${lobbyID}`)\r\n        .once(\"value\")\r\n        .then((snapshot) => {\r\n          if (snapshot.exists()) {\r\n            //check if user is partecipant\r\n            let userFound = false;\r\n            snapshot.child(\"partecipants\").forEach((element) => {\r\n              if (element.key == currentUser.uid) userFound = true;\r\n            });\r\n            //if user is partecipant\r\n            if (userFound) {\r\n              setIsPartecipant(true);\r\n              //retrieve game data\r\n              let data = snapshot.val();\r\n              //setto onDisconnect magari non serve\r\n              if (data.host == currentUser.uid) {\r\n                //console.log(\"user is host\");\r\n                //if host disconnects, remove lobby completely\r\n                var presenceRefHost = db.ref(`games/${lobbyID}`);\r\n                presenceRefHost.onDisconnect().set({\r\n                  null: null,\r\n                });\r\n              }\r\n              setTimeLimit(data.timeLimit);\r\n              setRounds(data.maxRounds);\r\n              //retrieve rounds info\r\n              let arrayData = [];\r\n              snapshot.child(\"rounds\").forEach((round) => {\r\n                let data = {\r\n                  lat: round.val().lat,\r\n                  lon: round.val().lon,\r\n                };\r\n                arrayData.push(data);\r\n              });\r\n              setGameData(arrayData);\r\n            } else {\r\n              Notification[\"error\"]({\r\n                title: \"Error\",\r\n                description:\r\n                  \"Host closed the match. You'll now be redirected...\",\r\n              });\r\n              setTimeout(() => {\r\n                history.push(`/`);\r\n              }, 1500);\r\n            }\r\n          } else {\r\n            history.push(\"/\");\r\n          }\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  //countdown in game time\r\n  useEffect(() => {\r\n    // Code in here\r\n    if (isGameStarted) {\r\n      setCurrentTime(currentTime - 1);\r\n    }\r\n  }, [isGameStarted]);\r\n\r\n  //countdown in game time\r\n  useEffect(() => {\r\n    if (isGameStarted) {\r\n      setTimeout(() => {\r\n        // Code in here\r\n        if (currentTime == 1) {\r\n          //handle end round\r\n          handleEndRound();\r\n        } else if (currentTime == 0) {\r\n        } else {\r\n          setCurrentTime(currentTime - 1);\r\n        }\r\n      }, 1000);\r\n    }\r\n  }, [currentTime]);\r\n\r\n  const handleNextRound = () => {\r\n    setIsGameStarted(false);\r\n    //reset local data\r\n    setCurrentRound(currentRound + 1);\r\n    setIsGameStarted(true);\r\n    setCurrentTime(timeLimit);\r\n  };\r\n\r\n  const handleEndRound = () => {\r\n    setIsGameStarted(false);\r\n    //calculate points\r\n    getDistanceFromLatLonInKm(\r\n      parseFloat(latGuessed),\r\n      parseFloat(lonGuessed),\r\n      parseFloat(gameData[currentRound - 1].lat),\r\n      parseFloat(gameData[currentRound - 1].lon)\r\n    )\r\n      .then((res) => {\r\n        let distance = parseInt(res);\r\n        let points = 0;\r\n        //TODO Implementare time influenza valore\r\n        let timeToAnswer = timeLimit - currentTime;\r\n        if (distance <= 1) {\r\n          points = 1000;\r\n        } else if (distance <= 5 && distance > 1) {\r\n          points = 800;\r\n        } else if (distance <= 25 && distance > 5) {\r\n          points = 500;\r\n        } else if (distance <= 100 && distance > 25) {\r\n          points = 500;\r\n        } else if (distance <= 500 && distance > 100) {\r\n          points = 350;\r\n        } else if (distance <= 2500 && distance > 500) {\r\n          points = 200;\r\n        } else if (distance <= 7000 && distance > 2500) {\r\n          points = 100;\r\n        } else if (distance > 7000) {\r\n          points = 1;\r\n        }\r\n\r\n        //set current data on db\r\n        addGuessedLoc(\r\n          currentUser.uid,\r\n          currentUser.username,\r\n          lobbyID,\r\n          currentRound,\r\n          latGuessed,\r\n          lonGuessed,\r\n          points\r\n        );\r\n      })\r\n      .then(() => {\r\n        //check if game is finished\r\n        if (currentRound == rounds) {\r\n          //game is finished, show result page.\r\n\r\n          setIsGameFinished(true);\r\n        }\r\n      });\r\n  };\r\n\r\n  return isPartecipant ? (\r\n    isGameFinished ? (\r\n      <>\r\n        <ResultScreen lobbyId={lobbyID} />\r\n      </>\r\n    ) : gameData.length > 0 ? (\r\n      !isGameStarted ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            gap: \"10px\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            marginTop: \"10%\",\r\n          }}\r\n        >\r\n          {currentRound == 0 ? (\r\n            <p style={{ fontSize: \"2rem\", fontFamily: \"Montserrat\" }}>\r\n              When you're ready start the game.\r\n            </p>\r\n          ) : (\r\n              <p style={{ fontSize: \"2rem\", fontFamily: \"Montserrat\" }}>\r\n                Round {currentRound + 1} out of {rounds}.\r\n              </p>\r\n            )}\r\n          <Button onClick={handleNextRound}>Start Round</Button>\r\n        </div>\r\n      ) : (\r\n          <>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              {/*  Game Utilities */}\r\n              <div\r\n                style={{\r\n                  padding: \"10px\",\r\n                  borderRadius: \"10px\",\r\n                  border: \"1px solid black\",\r\n                  backgroundColor: \"rgba(255,255,255,0.4)\",\r\n\r\n                  position: \"absolute\",\r\n                  top: \"6%\",\r\n                  left: \"1%\",\r\n                  zIndex: \"2\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  gap: \"5px\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    fontSize: \"1.3rem\",\r\n                    fontFamily: \"Roboto\",\r\n                    WebkitTextStroke: \"1px rgba(0,0,0,0.5)\",\r\n                    color: \"rgb(22, 82, 240)\",\r\n                  }}\r\n                >\r\n                  <p> Round : {currentRound}</p>\r\n                  <p> Time remaining : {currentTime}</p>\r\n                </div>\r\n\r\n                {currentRound == rounds ? (\r\n                  <Button style={{ marginTop: \"5px\" }} onClick={handleEndRound}>\r\n                    Finish Game\r\n                  </Button>\r\n                ) : (\r\n                    <Button style={{ marginTop: \"5px\" }} onClick={handleEndRound}>\r\n                      Next Round\r\n                    </Button>\r\n                  )}\r\n              </div>\r\n\r\n              {\r\n                <MapWrapper\r\n                  lat={gameData[currentRound - 1].lat}\r\n                  lon={gameData[currentRound - 1].lon}\r\n                />\r\n              }\r\n            </div>\r\n          </>\r\n        )\r\n    ) : (\r\n          <p>Loading...</p>\r\n        )\r\n  ) : (\r\n      <p>Loading...</p>\r\n    );\r\n}\r\n","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\providers\\Auth.js",[],"D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\services\\firebase.js",["143"],"import firebase from \"firebase/app\";\r\n\r\nimport \"firebase/firebase-analytics\";\r\nimport \"firebase/firebase-database\";\r\nimport \"firebase/firebase-functions\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  databaseURL: process.env.REACT_APP_BASEURL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default {\r\n  firebaseConfig,\r\n};\r\n\r\nexport const LoadAnalytics = () => {\r\n  firebase.analytics();\r\n};\r\n\r\nexport const db = firebase.database();\r\n// Initialize Cloud Functions through Firebase\r\nexport const functions = firebase.functions();\r\n","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Lobby\\CreateLobbyModal.js",["144","145","146"],"D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Lobby\\JoinLobbyModal.js",["147","148","149","150","151"],"import React, { useState, useContext } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  ControlLabel,\r\n  FormControl,\r\n  HelpBlock,\r\n  Modal,\r\n  Notification,\r\n} from \"rsuite\";\r\nimport { joinLobby, checkLobbyExist } from \"../../providers/GameProvider\";\r\nimport { AuthContext } from \"../../providers/Auth\";\r\n\r\nfunction uuidv4() {\r\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\r\n    (\r\n      c ^\r\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\r\n    ).toString(16)\r\n  );\r\n}\r\n\r\nfunction checkData(username, lobbyId) {\r\n\r\n  if (username == undefined || username.length < 2 || username.length > 25) {\r\n    Notification[\"warning\"]({\r\n      title: \"Warning\",\r\n      description: \"Username must be between 2 and 25 letters.\",\r\n    });\r\n    return false;\r\n  }\r\n\r\n  if (lobbyId.length < 0 || lobbyId == undefined || lobbyId == \"\") {\r\n    Notification[\"warning\"]({\r\n      title: \"Warning\",\r\n      description: \"Insert a Lobby ID\",\r\n    });\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default function JoinLobbyModal() {\r\n  const { createUser } = useContext(AuthContext);\r\n  const [lobbyId, setLobbyId] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [username, setUsername] = useState(\"gando\");\r\n  const handleOpen = (open) => {\r\n    setOpen(open);\r\n  };\r\n  const handleJoinLobby = (evt) => {\r\n    evt.preventDefault();\r\n    //create user\r\n\r\n    if (checkData(username, lobbyId)) {\r\n      //create random ID\r\n      let ID = uuidv4();\r\n      checkLobbyExist(lobbyId).then((res) => {\r\n        if (res == 1) {\r\n          createUser(username, ID).then((user) => {\r\n            //let user join lobby\r\n            joinLobby(user, lobbyId);\r\n          });\r\n        } else if (res == 2) {\r\n          Notification[\"error\"]({\r\n            title: \"Warning\",\r\n            description: \"Game in progress, can't join now.\",\r\n          });\r\n        } else {\r\n          Notification[\"error\"]({\r\n            title: \"Error\",\r\n            description: \"Lobby doesn't exists.\",\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={open} onHide={() => handleOpen(false)} size=\"xs\">\r\n        <Modal.Header>\r\n          <Modal.Title>Join Lobby</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form autoComplete=\"off\" fluid>\r\n            <FormGroup>\r\n              <ControlLabel>Username</ControlLabel>\r\n              <FormControl\r\n                name=\"username\"\r\n                type=\"text\"\r\n                value={username}\r\n                min={2}\r\n                max={25}\r\n                onChange={(e) => setUsername(e)}\r\n              />\r\n              <HelpBlock>Required</HelpBlock>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <ControlLabel>Lobby ID</ControlLabel>\r\n              <FormControl\r\n                name=\"lobbyId\"\r\n                type=\"text\"\r\n                value={lobbyId}\r\n                min={5}\r\n                max={5}\r\n                onChange={(e) => setLobbyId(e)}\r\n              />\r\n              <HelpBlock>Required</HelpBlock>\r\n            </FormGroup>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button appearance=\"primary\" onClick={handleJoinLobby}>\r\n            Join\r\n          </Button>\r\n          <Button onClick={() => handleOpen(false)} appearance=\"subtle\">\r\n            Cancel\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Button onClick={() => handleOpen(true)}>Join Lobby</Button>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\providers\\GameProvider.js",[],"D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Lobby\\User.js",[],"D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Lobby\\CreateUserModal.js",["152","153","154","155","156","157"],"import React, { useState, useContext } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  ControlLabel,\r\n  FormControl,\r\n  HelpBlock,\r\n  Modal,\r\n  Notification,\r\n} from \"rsuite\";\r\nimport { AuthContext } from \"../../providers/Auth\";\r\nimport { joinLobby, checkLobbyExist } from \"../../providers/GameProvider\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction uuidv4() {\r\n  return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, (c) =>\r\n    (\r\n      c ^\r\n      (crypto.getRandomValues(new Uint8Array(1))[0] & (15 >> (c / 4)))\r\n    ).toString(16)\r\n  );\r\n}\r\n\r\nfunction checkData(username) {\r\n  if (username == undefined || username.length < 2 || username.length > 25) {\r\n    Notification[\"warning\"]({\r\n      title: \"Warning\",\r\n      description: \"Username must be between 2 and 25 letters.\",\r\n    });\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport default function CreateUserModal(props) {\r\n  const { createUser } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const handleCreateUser = (evt) => {\r\n    evt.preventDefault();\r\n    //create user\r\n    //create random ID\r\n    if (checkData(username)) {\r\n      let ID = uuidv4();\r\n      //save user on context\r\n\r\n      checkLobbyExist(props.lobbyId).then((res) => {\r\n        if (res == 1) {\r\n          createUser(username, ID).then((user) => {\r\n            //let user join lobby\r\n            joinLobby(user, props.lobbyId);\r\n          });\r\n        } else if (res == 2) {\r\n          Notification[\"error\"]({\r\n            title: \"Warning\",\r\n            description: \"Game in progress, can't join now.You\\'ll now be redirected.\",\r\n          });\r\n          setTimeout(() => {\r\n            history.push(`/`);\r\n          }, 1500);\r\n        } else {\r\n          Notification[\"error\"]({\r\n            title: \"Error\",\r\n            description: \"Lobby doesn't exists. You\\'ll now be redirected.\",\r\n          });\r\n          setTimeout(() => {\r\n            history.push(`/`);\r\n          }, 1500);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal show={open} onHide={() => history.push(`/`)} size=\"xs\">\r\n      <Modal.Header>\r\n        <Modal.Title>Choose Name</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form autoComplete=\"off\" fluid>\r\n          <FormGroup>\r\n            <ControlLabel>Username</ControlLabel>\r\n            <FormControl\r\n              name=\"username\"\r\n              type=\"text\"\r\n              value={username}\r\n              min={2}\r\n              max={25}\r\n              onChange={(e) => setUsername(e)}\r\n            />\r\n            <HelpBlock>Required</HelpBlock>\r\n          </FormGroup>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button appearance=\"primary\" onClick={handleCreateUser}>\r\n          Choose Name\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Map\\MapGuesser.js",["158"],"import React, { useEffect, useContext } from \"react\";\r\n\r\nimport { GameContext } from \"../../providers/GameProvider\";\r\n\r\nexport default function MapGuesser(props) {\r\n  // Marker selection setup\r\n  const { setLocationGuessed } = useContext(GameContext);\r\n\r\n  var guessMarker;\r\n  // Mini map marker setup\r\n  const setGuessMarker = (guess, guessMarkerOptions) => {\r\n    if (guessMarker) {\r\n      guessMarker.setPosition(guess);\r\n    } else {\r\n      guessMarker = new window.google.maps.Marker(guessMarkerOptions);\r\n      guessMarker.setPosition(guess);\r\n      //setLocationGuessed()\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    var mapOptions = {\r\n      center: new window.google.maps.LatLng(0, 0, true),\r\n      zoom: 1,\r\n      mapTypeControl: false,\r\n      streetViewControl: false,\r\n      clickableIcons: false,\r\n      mapTypeId: window.google.maps.MapTypeId.ROADMAP,\r\n    };\r\n\r\n    var mMap = new window.google.maps.Map(\r\n      document.getElementById(\"miniMap\"),\r\n      mapOptions\r\n    );\r\n    var guessMarkerOptions = new window.google.maps.Marker({\r\n      map: mMap,\r\n      visible: true,\r\n      title: \"Your guess\",\r\n      draggable: false,\r\n      //icon: '/img/googleMapsMarkers/red_MarkerB.png'\r\n    });\r\n    // Mini map click\r\n    window.google.maps.event.addListener(mMap, \"click\", function (event) {\r\n      let position = event.latLng.toJSON();\r\n      setLocationGuessed(position.lat, position.lng);\r\n      window.guessLatLng = event.latLng;\r\n      setGuessMarker(window.guessLatLng, guessMarkerOptions);\r\n    });\r\n  }, []);\r\n\r\n  return <div style={{ width: \"100%\", height: \"100%\" }} id=\"miniMap\" />;\r\n}\r\n","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Result\\ResultScreen.js",["159"],"import React, { useState, useEffect } from \"react\";\r\nimport { Panel, Button } from \"rsuite\";\r\nimport { db } from \"../../services/firebase\";\r\nimport Scoreboard from \"./Scoreboard\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ResultScreen(props) {\r\n  const history = useHistory();\r\n  const [roundsResults, setRoundsResults] = useState([]);\r\n  const [finalResults, setFinalResults] = useState([]);\r\n  useEffect(() => {\r\n    //retrieve data\r\n    db.ref(`games/${props.lobbyId}`).on(\"value\", (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        //retrieve other data\r\n        let arrayDataRounds = [];\r\n        let arrayFinalResults = {};\r\n        snapshot.child(\"rounds\").forEach((round) => {\r\n          let data = round.val();\r\n          arrayDataRounds.push(data);\r\n          round.child(\"results\").forEach((user) => {\r\n            if (arrayFinalResults[user.key] == null) {\r\n              arrayFinalResults[user.key] = user.val().points;\r\n            } else {\r\n              arrayFinalResults[user.key] =\r\n                arrayFinalResults[user.key] + user.val().points;\r\n            }\r\n          });\r\n        });\r\n        let result = [];\r\n        for (var i in arrayFinalResults) result.push([i, arrayFinalResults[i]]);\r\n        setRoundsResults(arrayDataRounds);\r\n        setFinalResults(result);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleReturnToLobby = () => {\r\n    window.location.reload();\r\n    history.push(`/`);\r\n  };\r\n\r\n  return roundsResults.length > 0 || finalResults.length > 0 ? (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        height: \"100%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <Panel\r\n        style={{\r\n          width: \"500px\",\r\n          backgroundColor: \"#2B2E33\",\r\n        }}\r\n        header=\"Results\"\r\n        shaded\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            minHeight: \"200px\",\r\n            justifyContent: \"space-between\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n\r\n              paddingLeft: \"10px\",\r\n            }}\r\n          >\r\n            <p>\r\n              <b>Total</b>\r\n            </p>\r\n            <Scoreboard results={finalResults} lobbyId={props.lobbyId} />\r\n          </div>\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"flex-end\",\r\n              paddingRight: \"10px\",\r\n            }}\r\n          >\r\n            <Button\r\n              style={{ height: \"50px\", alignSelf: \"center\" }}\r\n              appearance=\"primary\"\r\n              onClick={handleReturnToLobby}\r\n            >\r\n              Return Home\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Panel>\r\n    </div>\r\n  ) : (\r\n      <p>Loading...</p>\r\n    );\r\n}\r\n","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Result\\User.js",["160","161"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { db } from \"../../services/firebase\";\r\nexport default function User(props) {\r\n  const [userData, setUserData] = useState(null);\r\n  useEffect(() => {\r\n    db.ref(`games/${props.lobbyId}`).once(\"value\", (snapshot) => {\r\n      if (snapshot.exists()) {\r\n        //retrieve aprtecipants once.\r\n        snapshot.child(\"partecipants\").forEach((element) => {\r\n          if (element.key == props.user[0]) {\r\n            let data = {\r\n              points: props.user[1],\r\n              name: element.val(),\r\n            };\r\n            setUserData(data);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }, [props]);\r\n  return userData != null ? (\r\n    userData.points == undefined || isNaN(userData.points) ? (\r\n      <p>{userData.name} is still playing.</p>\r\n    ) : (\r\n        <p>\r\n          {userData.name} made {userData.points} points.\r\n        </p>\r\n      )\r\n  ) : (\r\n      <p>Loading..</p>\r\n    );\r\n}\r\n","D:\\Utente\\Desktop\\code\\MyWebsite\\GuessLocations\\client\\src\\components\\Result\\Scoreboard.js",[],{"ruleId":"162","severity":1,"message":"163","line":2,"column":8,"nodeType":"164","messageId":"165","endLine":2,"endColumn":22},{"ruleId":"162","severity":1,"message":"166","line":4,"column":7,"nodeType":"164","messageId":"165","endLine":4,"endColumn":15},{"ruleId":"162","severity":1,"message":"167","line":7,"column":10,"nodeType":"164","messageId":"165","endLine":7,"endColumn":18},{"ruleId":"162","severity":1,"message":"168","line":7,"column":20,"nodeType":"164","messageId":"165","endLine":7,"endColumn":31},{"ruleId":"169","severity":1,"message":"170","line":31,"column":15,"nodeType":"171","messageId":"172","endLine":31,"endColumn":17},{"ruleId":"169","severity":1,"message":"170","line":37,"column":15,"nodeType":"171","messageId":"172","endLine":37,"endColumn":17},{"ruleId":"169","severity":1,"message":"170","line":43,"column":15,"nodeType":"171","messageId":"172","endLine":43,"endColumn":17},{"ruleId":"169","severity":1,"message":"170","line":48,"column":15,"nodeType":"171","messageId":"172","endLine":48,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":63,"column":6,"nodeType":"175","endLine":63,"endColumn":22,"suggestions":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"177","replacedBy":"181"},{"ruleId":"179","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":19,"column":52,"nodeType":"185","endLine":19,"endColumn":72},{"ruleId":"183","severity":1,"message":"184","line":30,"column":21,"nodeType":"185","endLine":30,"endColumn":41},{"ruleId":"162","severity":1,"message":"186","line":33,"column":15,"nodeType":"164","messageId":"165","endLine":33,"endColumn":23},{"ruleId":"173","severity":1,"message":"187","line":45,"column":6,"nodeType":"175","endLine":45,"endColumn":8,"suggestions":"188"},{"ruleId":"169","severity":1,"message":"170","line":37,"column":25,"nodeType":"171","messageId":"172","endLine":37,"endColumn":27},{"ruleId":"169","severity":1,"message":"189","line":59,"column":27,"nodeType":"171","messageId":"172","endLine":59,"endColumn":29},{"ruleId":"173","severity":1,"message":"190","line":81,"column":6,"nodeType":"175","endLine":81,"endColumn":19,"suggestions":"191"},{"ruleId":"183","severity":1,"message":"184","line":148,"column":21,"nodeType":"185","endLine":148,"endColumn":43},{"ruleId":"169","severity":1,"message":"170","line":55,"column":31,"nodeType":"171","messageId":"172","endLine":55,"endColumn":33},{"ruleId":"169","severity":1,"message":"170","line":63,"column":29,"nodeType":"171","messageId":"172","endLine":63,"endColumn":31},{"ruleId":"173","severity":1,"message":"192","line":98,"column":6,"nodeType":"175","endLine":98,"endColumn":8,"suggestions":"193"},{"ruleId":"173","severity":1,"message":"194","line":106,"column":6,"nodeType":"175","endLine":106,"endColumn":21,"suggestions":"195"},{"ruleId":"169","severity":1,"message":"170","line":113,"column":25,"nodeType":"171","messageId":"172","endLine":113,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":116,"column":32,"nodeType":"171","messageId":"172","endLine":116,"endColumn":34},{"ruleId":"173","severity":1,"message":"196","line":122,"column":6,"nodeType":"175","endLine":122,"endColumn":19,"suggestions":"197"},{"ruleId":"162","severity":1,"message":"198","line":145,"column":13,"nodeType":"164","messageId":"165","endLine":145,"endColumn":25},{"ruleId":"169","severity":1,"message":"170","line":177,"column":26,"nodeType":"171","messageId":"172","endLine":177,"endColumn":28},{"ruleId":"169","severity":1,"message":"170","line":202,"column":25,"nodeType":"171","messageId":"172","endLine":202,"endColumn":27},{"ruleId":"169","severity":1,"message":"170","line":251,"column":31,"nodeType":"171","messageId":"172","endLine":251,"endColumn":33},{"ruleId":"199","severity":1,"message":"200","line":21,"column":1,"nodeType":"201","endLine":23,"endColumn":3},{"ruleId":"169","severity":1,"message":"170","line":27,"column":16,"nodeType":"171","messageId":"172","endLine":27,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":35,"column":28,"nodeType":"171","messageId":"172","endLine":35,"endColumn":30},{"ruleId":"169","severity":1,"message":"170","line":42,"column":34,"nodeType":"171","messageId":"172","endLine":42,"endColumn":36},{"ruleId":"169","severity":1,"message":"170","line":27,"column":16,"nodeType":"171","messageId":"172","endLine":27,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":35,"column":37,"nodeType":"171","messageId":"172","endLine":35,"endColumn":39},{"ruleId":"169","severity":1,"message":"170","line":35,"column":61,"nodeType":"171","messageId":"172","endLine":35,"endColumn":63},{"ruleId":"169","severity":1,"message":"170","line":61,"column":17,"nodeType":"171","messageId":"172","endLine":61,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":66,"column":24,"nodeType":"171","messageId":"172","endLine":66,"endColumn":26},{"ruleId":"169","severity":1,"message":"170","line":27,"column":16,"nodeType":"171","messageId":"172","endLine":27,"endColumn":18},{"ruleId":"162","severity":1,"message":"202","line":40,"column":16,"nodeType":"164","messageId":"165","endLine":40,"endColumn":23},{"ruleId":"169","severity":1,"message":"170","line":53,"column":17,"nodeType":"171","messageId":"172","endLine":53,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":58,"column":24,"nodeType":"171","messageId":"172","endLine":58,"endColumn":26},{"ruleId":"203","severity":1,"message":"204","line":61,"column":63,"nodeType":"205","messageId":"206","endLine":61,"endColumn":64,"suggestions":"207"},{"ruleId":"203","severity":1,"message":"204","line":69,"column":52,"nodeType":"205","messageId":"206","endLine":69,"endColumn":53,"suggestions":"208"},{"ruleId":"173","severity":1,"message":"209","line":49,"column":6,"nodeType":"175","endLine":49,"endColumn":8,"suggestions":"210"},{"ruleId":"173","severity":1,"message":"211","line":36,"column":6,"nodeType":"175","endLine":36,"endColumn":8,"suggestions":"212"},{"ruleId":"169","severity":1,"message":"170","line":11,"column":27,"nodeType":"171","messageId":"172","endLine":11,"endColumn":29},{"ruleId":"169","severity":1,"message":"170","line":23,"column":21,"nodeType":"171","messageId":"172","endLine":23,"endColumn":23},"no-unused-vars","'socketIOClient' is defined but never used.","Identifier","unusedVar","'ENDPOINT' is assigned a value but never used.","'response' is assigned a value but never used.","'setResponse' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'img'. Either include it or remove the dependency array.","ArrayExpression",["213"],"no-native-reassign",["214"],"no-negated-in-lhs",["215"],["214"],["215"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'panorama' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.center' and 'props.zoom'. Either include them or remove the dependency array.",["216"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'history', 'joinedUsers', and 'lobbyID'. Either include them or remove the dependency array.",["217"],"React Hook useEffect has missing dependencies: 'currentUser', 'history', and 'lobbyID'. Either include them or remove the dependency array.",["218"],"React Hook useEffect has a missing dependency: 'currentTime'. Either include it or remove the dependency array. You can also do a functional update 'setCurrentTime(c => ...)' if you only need 'currentTime' in the 'setCurrentTime' call.",["219"],"React Hook useEffect has missing dependencies: 'handleEndRound' and 'isGameStarted'. Either include them or remove the dependency array.",["220"],"'timeToAnswer' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setOpen' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\'.","Literal","unnecessaryEscape",["221","222"],["223","224"],"React Hook useEffect has missing dependencies: 'setGuessMarker' and 'setLocationGuessed'. Either include them or remove the dependency array.",["225"],"React Hook useEffect has a missing dependency: 'props.lobbyId'. Either include it or remove the dependency array.",["226"],{"desc":"227","fix":"228"},"no-global-assign","no-unsafe-negation",{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"messageId":"239","fix":"240","desc":"241"},{"messageId":"242","fix":"243","desc":"244"},{"messageId":"239","fix":"245","desc":"241"},{"messageId":"242","fix":"246","desc":"244"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [img, playerPosition]",{"range":"251","text":"252"},"Update the dependencies array to be: [props.center, props.zoom]",{"range":"253","text":"254"},"Update the dependencies array to be: [currentUser, history, joinedUsers, lobbyID]",{"range":"255","text":"256"},"Update the dependencies array to be: [currentUser, history, lobbyID]",{"range":"257","text":"258"},"Update the dependencies array to be: [currentTime, isGameStarted]",{"range":"259","text":"260"},"Update the dependencies array to be: [currentTime, handleEndRound, isGameStarted]",{"range":"261","text":"262"},"removeEscape",{"range":"263","text":"264"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"265","text":"266"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"267","text":"264"},{"range":"268","text":"266"},"Update the dependencies array to be: [setGuessMarker, setLocationGuessed]",{"range":"269","text":"270"},"Update the dependencies array to be: [props.lobbyId]",{"range":"271","text":"272"},[1596,1612],"[img, playerPosition]",[1450,1452],"[props.center, props.zoom]",[2851,2864],"[currentUser, history, joinedUsers, lobbyID]",[3615,3617],"[currentUser, history, lobbyID]",[3771,3786],"[currentTime, isGameStarted]",[4152,4165],"[currentTime, handleEndRound, isGameStarted]",[1688,1689],"",[1688,1688],"\\",[1946,1947],[1946,1946],[1524,1526],"[setGuessMarker, setLocationGuessed]",[1358,1360],"[props.lobbyId]"]